{"version":3,"sources":["WordTank.ts"],"names":[],"mappings":";;AAQA;IAOI,kBAAY,SAAoB;QANxB,WAAM,GAAe,EAAE,CAAC;QAO5B,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;YAC1B,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAMM,+BAAY,GAAnB,UAAoB,IAAY;QAC5B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAMM,4BAAS,GAAhB,UAAiB,IAAY;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACzD,CAAC;IACL,CAAC;IAMM,4BAAS,GAAhB,UAAiB,IAAY;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACzD,CAAC;IACL,CAAC;IACL,eAAC;AAAD,CA5CA,AA4CC,IAAA;AAGD,kBAAe,QAAQ,CAAC","file":"../WordTank.js","sourcesContent":["interface IWordIndex {\r\n    [index: string]: number;\r\n}\r\n\r\n/**\r\n * WordTank class\r\n * @class WordTank\r\n */\r\nclass WordTank {\r\n    private _index: IWordIndex = {};\r\n\r\n    /**\r\n     * Creates an instance of WordTank\r\n     * @param wordArray Array of strings to index\r\n     */\r\n    constructor(wordArray?: string[]) {\r\n        if (wordArray !== undefined) {\r\n            wordArray.forEach(this.indexWord, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the number of times a word is indexed\r\n     * @param word The word to find\r\n     */\r\n    public getWordCount(word: string): number {\r\n        return this._index[word] || 0;\r\n    }\r\n\r\n    /**\r\n     * Indexes a word\r\n     * @param word Word to index\r\n     */\r\n    public indexWord(word: string) {\r\n        if (word) {\r\n            this._index[word] = this._index[word] || 0 + 1;\r\n        } else {\r\n            throw new Error(\"Empty string cannot be specified.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the index of the word\r\n     * @param word Word to remove from the index\r\n     */\r\n    public clearWord(word: string) {\r\n        if (word) {\r\n            delete this._index[word];\r\n        } else {\r\n            throw new Error(\"Empty string cannot be specified.\");\r\n        }\r\n    }\r\n}\r\n\r\n// module.exports = WordTank;\r\nexport default WordTank;\r\n"]}